#==============================================================
#
#  Name: README
#
#  Rem: This is a driver for the PSI slsDetectorPackage with support
#   for mainly the control interface of the Jungfrau detector.
#
#==============================================================

Intro:
------
This module implements a asynPortDriver for communicating with the Jungfrau
detector from PSI using the slsDetectorPackage software library. This package
can be obtained from here: https://github.com/slsdetectorgroup/slsDetectorPackage

SlsDetectorPackage Version
---------------------------
This module is built against version 4.1.1 of the slsDetectorPackage.

EPICS Versions:
--------------
This module has currently been built and tested at SLAC with EPICS 3.15.5 and
EPICS R7.0.2. The module also depends on asyn and has been tested against asyn
4.32 and higher.

Operating System:
-----------------
This driver has been tested for rhel6-x86_64 on RHEL-6 and for rhel7-x86_64
on RHEL-7.

How to use this module in your IOC:
-----------------------------------
1.  Add the following lines in your iocTop/configure/RELEASE:
SLSDET_MODULE_VERSION=R1.0.0   (use current version here)
SLSDET=$(EPICS_MODULES)/slsdet/$(SLSDET_MODULE_VERSION)

2.  Add the following lines in your <appName>/src/Makefile:
<appName>_DBD += asyn.dbd
<appName>_DBD += slsDetSupport.dbd
<appName>_LIBS += slsDet
<appName>_LIBS += SlsDetector
<appName>_LIBS += SlsReceiver
<appName>_LIBS += zmq
<appName>_LIBS += asyn

3. Create a substitutions file for generating a db file from the templates
included in the module. Below is an example substitutions file for a detector
with two modules:

file slsMultiDetector.template
{
    pattern
    { SLSDET      PORT    }
    { $(SLSDET),  $(PORT) }
}

file slsDetector.template
{
    pattern
    { SLSDET      MOD   PORT      ADDR, TIMEOUT     }
    { $(SLSDET),  MOD0, $(PORT),  0,    $(TIMEOUT)  }
    { $(SLSDET),  MOD1, $(PORT),  1,    $(TIMEOUT)  }
}

4. Add the following lines in your iocBoot/ioc<iocName>/st.cmd:
SlsDetConfigure( "TST:JF512K:CTRL", "det-jungfrau-31+", "0", "0.5" )
where the parameters are:
- asyn port name: you'll need to pass this to your db file
- detector hostnames: a '+' delimited list of the hostname/ip of all the
  tiles in the detector
- the internal slsDetectorPackage id: this can be any arbitrary integer, but
  it needs to be unique (at least on the machine the IOC is running on) since
  the slsDetectorPackage is using shared memory that it names based on that id
- the timeout in seconds for asyn read/writes

Also remember to load the db file you made!
